//
//  RenVMSolanaChainTests.swift
//  SolanaSwift_Tests
//
//  Created by Chung Tran on 09/09/2021.
//  Copyright Â© 2021 CocoaPods. All rights reserved.
//

import XCTest
@testable import SolanaSwift

class RenVMSolanaChainTests: XCTestCase {
    func decodeGatewayRegistryData() throws {
        let data = Data(base64Encoded: mockGatewayRegistryData)!
        var pointer = 0
        let gatewayRegistryData = try RenVM.SolanaChain.GatewayRegistryData(buffer: data, pointer: &pointer)
        
        XCTAssertTrue(gatewayRegistryData.isInitialized)
        XCTAssertEqual(gatewayRegistryData.owner, "GQy1uiRSpfkb3xxRXFuNhz7cCoa5P9NgEDAWyykMGB3J")
        XCTAssertEqual(gatewayRegistryData.count, 7)
        
        XCTAssertEqual(gatewayRegistryData.selectors.count, 32)
        XCTAssertEqual(gatewayRegistryData.selectors.first, "2XWUS8dNzaAFeDk6e6Q4dsojE3n9jncAZ9nNBpCJWEgZ")
        XCTAssertEqual(gatewayRegistryData.selectors[5], "58no1qGYUB4FN8KKDEC2TRFRtfJeKTvXQeTeC9jhga7x")
        XCTAssertEqual(gatewayRegistryData.selectors[7], "11111111111111111111111111111111")
        XCTAssertEqual(gatewayRegistryData.selectors[31], "11111111111111111111111111111111")
        
        XCTAssertEqual(gatewayRegistryData.gateways.count, 32)
        XCTAssertEqual(gatewayRegistryData.gateways[0], "FsEACSS3nKamRKdJBaBDpZtDXWrHR2nByahr4ReoYMBH")
        XCTAssertEqual(gatewayRegistryData.gateways[5], "4tcoeQfSLpyd3qqnJBweTkFFqYjvn4hsv9uWP7GM94XK")
        XCTAssertEqual(gatewayRegistryData.gateways[7], "11111111111111111111111111111111")
        XCTAssertEqual(gatewayRegistryData.gateways[31], "11111111111111111111111111111111")
    }
}

private extension RenVMSolanaChainTests {
    var mockGatewayRegistryData: String { "AeUC/+ddaHyeNUw2z5rXC14JT/L5iP5XK0mntqa7XCxlBwAAAAAAAAAgAAAAFqxvuLgA/54kIgR51p04tZoHeWb1AMe700NdrXjY/AKV6ll5U+NOJAuSpS1MEZjUKyxi4wlqU+YEJ52Z7s4YFSA+bXjOX3F7RHMxRq123Ox1wS/t/9HBDwNSeFD8DK9hyU5eII+zVE2ExcMXZUncKLG+CoIEWXDYPpjHI53AEJbElO3RrCEmv30v7t+S9aOqeUdpFFBb1x5bAq9TqTcSaz1tl5JHhes5x7+TYVSrw8Gc9EQLvsD0B0LuU09HvaCPDTzteFAQ1hYPjymyoXBm6JKineCC2+TSGe80Tr/PKvc4YkuqUGY4mRZqlFyxHlx2TKnqFLGpEz10ZNNNQGHfA1/dEqPy9mwBhyspaFIeXt5VXRlelXLdpiVQannlTY6dqAqzAx7JqIY4rr0MUIuoJF7jmWJC1UBtEVnIe1Q8WCcSBTCod3mdyscOmDKfzECswApEyfqxNBuQKGQZKZy/zDaOXDT2/ccrtZkUzub+Du0s15MbOsq/t5t5EWrjpxsOcwqf2byASDdaXaT/Q/Px9EJInBuql31tHlPMovtAqpks254VtB/XdueMdW4CyG6i/Z8B7lFtqvdTdNbgHp
    }
}
